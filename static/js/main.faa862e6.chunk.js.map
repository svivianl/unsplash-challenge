{"version":3,"sources":["components/loader/Loader.jsx","components/cardList/components/card/components/photoDetails/components/photoDetail/PhotoDetailView.jsx","api/unsplash.api.js","store/types/unsplash.constants.js","store/types/unsplash.js","store/selectors.js","components/cardList/components/card/components/photoDetails/PhotoDetails.jsx","store/actions.js","components/cardList/components/card/Card.jsx","components/cardList/components/resultText/ResultTextView.jsx","components/cardList/CardList.jsx","components/searchForm/orientations/Orientations.jsx","components/searchForm/SearchForm.jsx","App.jsx","serviceWorker.js","store/reducers.js","store/configureStore.js","index.jsx"],"names":["Loader","className","PhotoDetailView","label","value","alignCenter","children","accesskey","process","apiUrl","path","getPhotos","query","page","orientation","a","url","Promise","resolve","reject","axios","get","then","response","status","data","total","catch","error","getPhotoDetails","photoId","GET_PHOTOS","orientations","getState","state","upslashState","createSelector","isLoading","photoDetails","PhotoDetails","id","created_at","likes","alt_description","description","user","urls","handleClose","dispatch","useDispatch","useSelector","selectors","useEffect","type","api","payload","name","location","photoLocation","small","createdAt","moment","utc","format","onClick","alt","src","city","country","profile_image","Card","photo","useState","isPhotoDetailsOpen","setIsPhotoDetailsOpen","ResultTextView","CardList","setPage","photos","dataLength","length","next","actions","hasMore","endMessage","Boolean","style","textAlign","map","key","Orientations","setOrientation","checked","onChange","SearchBox","setQuery","inputValue","setInputValue","onSubmit","event","preventDefault","aria-label","placeholder","target","size","App","SearchForm","window","hostname","match","initialStateSearch","totalPages","reducer","combineReducers","action","photosCloned","cloneDeep","resultsCloned","results","total_pages","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.faa862e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../App.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"backdrop\">\r\n      <div className=\"circular-progress\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport className from \"classnames\";\r\nimport \"./photoDetailView.css\";\r\n\r\nconst PhotoDetailView = ({ label, value, alignCenter = false, children }) => {\r\n  return (\r\n    <div className={className(\"detail\", alignCenter ? \"align-center\" : null)}>\r\n      <strong>{label}:</strong> {children} <span>{value}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoDetailView;\r\n","import axios from \"axios\";\r\n\r\nconst accesskey = process.env.REACT_APP_UNSPLASH_ACCESS_KEY;\r\n\r\nexport const apiUrl = (path) => {\r\n  return `https://api.unsplash.com${path}`;\r\n};\r\n\r\nexport const getPhotos = async (query, page, orientation) => {\r\n  const url = orientation\r\n    ? `/search/photos?page=${page}&query=${query}&client_id=${accesskey}&orientation=${orientation}`\r\n    : `/search/photos?page=${page}&query=${query}&client_id=${accesskey}`;\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(apiUrl(url))\r\n      .then((response) => {\r\n        if (\r\n          (response.status === 200 && !response) ||\r\n          (response && response.data.total === 0)\r\n        ) {\r\n          return reject(\"No images found\");\r\n        }\r\n\r\n        return resolve(response.data);\r\n      })\r\n      .catch((error) => reject(\"Bad request\"));\r\n  });\r\n};\r\n\r\nexport const getPhotoDetails = async (photoId) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(apiUrl(`/photos/${photoId}/?client_id=${accesskey}`))\r\n      .then((response) => {\r\n        if (\r\n          (response.status === 200 && !response) ||\r\n          (response && response.data.total === 0)\r\n        ) {\r\n          return reject(\"Image detail found\");\r\n        }\r\n\r\n        return resolve(response.data);\r\n      })\r\n      .catch((error) => reject(\"Bad request\"));\r\n  });\r\n};\r\n","export const GET_INITIAL_PHOTOS = \"Unsplash/GetInitialPhotos\";\r\nexport const GET_INITIAL_PHOTOS_SUCCESS = \"Unsplash/GetInitialPhotosSuccess\";\r\nexport const GET_INITIAL_PHOTOS_ERROR = \"Unsplash/GetInitialPhotosError\";\r\nexport const GET_PHOTOS = \"Unsplash/GetPhotos\";\r\nexport const GET_PHOTOS_SUCCESS = \"Unsplash/GetPhotosSuccess\";\r\nexport const GET_PHOTOS_ERROR = \"Unsplash/GetPhotosError\";\r\nexport const GET_PHOTO_DETAILS = \"Unsplash/GetPhotoDetailss\";\r\nexport const GET_PHOTO_DETAILS_SUCCESS = \"Unsplash/GetPhotoDetailssSuccess\";\r\nexport const GET_PHOTO_DETAILS_ERROR = \"Unsplash/GetPhotoDetailssError\";\r\n","export const orientations = [\"landscape\", \"portrait\", \"squarish\"];\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getState = (state) => state.upslashState;\r\n\r\nexport const getIsLoading = createSelector(\r\n  getState,\r\n  (state) => state?.isLoading || false\r\n);\r\n\r\nexport const getPhotoDetails = createSelector(\r\n  getState,\r\n  (state) => state?.photoDetails || {}\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport PhotoDetailView from \"./components/photoDetail/PhotoDetailView\";\r\nimport * as actions from \"../../../../../../store/actions\";\r\nimport * as selectors from \"../../../../../../store/selectors\";\r\nimport \"../../../../../../App.css\";\r\nimport \"./photoDetails.css\";\r\n\r\nconst PhotoDetails = ({\r\n  id,\r\n  created_at,\r\n  likes,\r\n  alt_description,\r\n  description,\r\n  user,\r\n  urls,\r\n  handleClose,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const photoDetails = useSelector(selectors.getPhotoDetails);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(actions.getPhotoDetails(id));\r\n    }\r\n  }, [id, dispatch]);\r\n\r\n  const { name, location } = user;\r\n  const { location: photoLocation } = photoDetails;\r\n  const url = urls.small;\r\n  const createdAt = moment.utc(created_at).format(\"MMMM D, YYYY\");\r\n\r\n  return (\r\n    <div className=\"backdrop\" onClick={handleClose}>\r\n      <div className=\"photo-details-modal\">\r\n        <p onClick={handleClose}>X</p>\r\n        <div className=\"photo-details-modal-content\">\r\n          <div className=\"title\">\r\n            <div>\r\n              <img alt={alt_description} src={url} />\r\n            </div>\r\n            <h3>Photography's details:</h3>\r\n          </div>\r\n          <div className=\"photo-details\">\r\n            {description && (\r\n              <PhotoDetailView label=\"Description\" value={description} />\r\n            )}\r\n            <PhotoDetailView label=\"Likes\" value={likes} />\r\n            {photoLocation && photoLocation.city && photoLocation.country && (\r\n              <PhotoDetailView\r\n                label=\"Location\"\r\n                value={`${photoLocation.city} - ${photoLocation.country}`}\r\n              />\r\n            )}\r\n            <PhotoDetailView label=\"Created at\" value={createdAt} />\r\n          </div>\r\n          <hr></hr>\r\n          <div className=\"photo-details\">\r\n            <h4>Author's details:</h4>\r\n            <PhotoDetailView label=\"Name\" value={name} alignCenter={true}>\r\n              {user && user.profile_image && user.profile_image.small && (\r\n                <div className=\"profile-image\">\r\n                  <img alt={name} src={user.profile_image.small} />\r\n                </div>\r\n              )}\r\n            </PhotoDetailView>\r\n            {location && <PhotoDetailView label=\"Location\" value={location} />}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoDetails;\r\n","import * as api from \"../api/unsplash.api\";\r\nimport {\r\n  GET_INITIAL_PHOTOS,\r\n  GET_INITIAL_PHOTOS_SUCCESS,\r\n  GET_INITIAL_PHOTOS_ERROR,\r\n  GET_PHOTOS,\r\n  GET_PHOTOS_SUCCESS,\r\n  GET_PHOTOS_ERROR,\r\n  GET_PHOTO_DETAILS,\r\n  GET_PHOTO_DETAILS_SUCCESS,\r\n  GET_PHOTO_DETAILS_ERROR,\r\n} from \"./types\";\r\n\r\nexport const getInitialPhotos = (query, page = 1, orientation) => (\r\n  dispatch\r\n) => {\r\n  dispatch({ type: GET_INITIAL_PHOTOS });\r\n  api\r\n    .getPhotos(query, page, orientation)\r\n    .then((data) =>\r\n      dispatch({ type: GET_INITIAL_PHOTOS_SUCCESS, payload: data })\r\n    )\r\n    .catch((error) =>\r\n      dispatch({ type: GET_INITIAL_PHOTOS_ERROR, payload: error })\r\n    );\r\n};\r\n\r\nexport const getPhotos = (query, page = 2, orientation) => (dispatch) => {\r\n  dispatch({ type: GET_PHOTOS });\r\n  api\r\n    .getPhotos(query, page, orientation)\r\n    .then((data) => dispatch({ type: GET_PHOTOS_SUCCESS, payload: data }))\r\n    .catch((error) => dispatch({ type: GET_PHOTOS_ERROR, payload: error }));\r\n};\r\n\r\nexport const getPhotoDetails = (photoId) => (dispatch) => {\r\n  dispatch({ type: GET_PHOTO_DETAILS });\r\n  api\r\n    .getPhotoDetails(photoId)\r\n    .then((data) =>\r\n      dispatch({ type: GET_PHOTO_DETAILS_SUCCESS, payload: data })\r\n    )\r\n    .catch((error) =>\r\n      dispatch({ type: GET_PHOTO_DETAILS_ERROR, payload: error })\r\n    );\r\n};\r\n","import React, { Fragment, useState } from \"react\";\r\nimport PhotoDetails from \"./components/photoDetails/PhotoDetails\";\r\nimport \"./card.css\";\r\n\r\nconst Card = ({ photo }) => {\r\n  const [isPhotoDetailsOpen, setIsPhotoDetailsOpen] = useState(false);\r\n  const url = photo.urls.small;\r\n  const { alt_description } = photo;\r\n\r\n  const handleOnCardClick = () => {\r\n    setIsPhotoDetailsOpen(true);\r\n  };\r\n\r\n  const handleOnPhotoClick = () => {\r\n    setIsPhotoDetailsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"card\" onClick={handleOnCardClick}>\r\n        <img alt={alt_description} src={url} />\r\n      </div>\r\n      {isPhotoDetailsOpen && (\r\n        <PhotoDetails {...photo} handleClose={handleOnPhotoClick} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nconst ResultTextView = ({ error, total }) => {\r\n  return error ? (\r\n    <p>{error}</p>\r\n  ) : (\r\n    <p>\r\n      Found <strong>{total}</strong> images\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default ResultTextView;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"../loader/Loader\";\r\nimport Card from \"./components/card/Card\";\r\nimport ResultTextView from \"./components/resultText/ResultTextView\";\r\nimport * as selectors from \"../../store/selectors\";\r\nimport * as actions from \"../../store/actions\";\r\nimport \"./cardList.css\";\r\n\r\nconst CardList = ({ query, page, orientation, setPage }) => {\r\n  const dispatch = useDispatch();\r\n  const { photos, total, error, isLoading } = useSelector(selectors.getState);\r\n\r\n  return (\r\n    <div className=\"result\">\r\n      {query && <ResultTextView error={error} total={total} />}\r\n      <InfiniteScroll\r\n        dataLength={photos.length} //This is important field to render the next data\r\n        next={() => {\r\n          dispatch(actions.getPhotos(query, page, orientation));\r\n          setPage(page + 1);\r\n        }}\r\n        hasMore={photos.length < total}\r\n        endMessage={\r\n          Boolean(photos && photos.length) && (\r\n            <p style={{ textAlign: \"center\" }}>\r\n              <b>Yay! You have seen it all</b>\r\n            </p>\r\n          )\r\n        }\r\n      >\r\n        <div className=\"cards\">\r\n          {photos.map((photo) => {\r\n            return <Card key={photo.id} photo={photo} />;\r\n          })}\r\n        </div>\r\n      </InfiniteScroll>\r\n      {isLoading && <Loader />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport { orientations } from \"../../../store/types\";\r\nimport \"./orientations.css\";\r\n\r\nconst Orientations = ({ orientation, setOrientation }) => {\r\n  return (\r\n    <div className=\"orientations\">\r\n      <h5>Orientation:</h5>\r\n      <div className=\"orientation\" onClick={() => setOrientation(\"\")}>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"all\"\r\n          value=\"all\"\r\n          checked={!orientation}\r\n          onChange={() => setOrientation(\"\")}\r\n        />\r\n        all\r\n      </div>\r\n      {orientations.map((type) => (\r\n        <div\r\n          className=\"orientation\"\r\n          key={type}\r\n          onClick={() => setOrientation(type)}\r\n        >\r\n          <input\r\n            type=\"radio\"\r\n            id={type}\r\n            value={type}\r\n            checked={orientation === type}\r\n            onChange={() => setOrientation(type)}\r\n          />\r\n          {type}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orientations;\r\n","import React, { useState } from \"react\";\r\nimport Orientations from \"./orientations/Orientations\";\r\nimport \"./searchForm.css\";\r\n\r\nconst SearchBox = ({ setQuery, orientation, setOrientation }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setInputValue(event.target.value);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n    setQuery(inputValue);\r\n  };\r\n\r\n  return (\r\n    <form className=\"search-form\" onSubmit={handleOnSubmit}>\r\n      <div className=\"search-container\">\r\n        <input\r\n          aria-label=\"Search\"\r\n          type=\"search\"\r\n          placeholder=\"search photos\"\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"mobile\">\r\n          <Orientations\r\n            size=\"mobile\"\r\n            orientation={orientation}\r\n            setOrientation={setOrientation}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" alt=\"Search\">\r\n          Search\r\n        </button>\r\n      </div>\r\n      <div className=\"desktop\">\r\n        <Orientations\r\n          size=\"desktop\"\r\n          orientation={orientation}\r\n          setOrientation={setOrientation}\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CardList from \"./components/cardList/CardList\";\r\nimport SearchForm from \"./components/searchForm/SearchForm\";\r\nimport * as actions from \"./store/actions\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [orientation, setOrientation] = useState(\"\");\r\n  const [page, setPage] = useState(2);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      dispatch(actions.getInitialPhotos(query, 1, orientation));\r\n      setPage(2);\r\n    }\r\n  }, [dispatch, orientation, query]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Upslash Challenge</h1>\r\n      </header>\r\n      <main>\r\n        <SearchForm\r\n          setQuery={setQuery}\r\n          orientation={orientation}\r\n          setOrientation={setOrientation}\r\n        />\r\n        <CardList\r\n          query={query}\r\n          page={page}\r\n          orientation={orientation}\r\n          setPage={setPage}\r\n        />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { cloneDeep } from \"lodash\";\r\nimport {\r\n  GET_INITIAL_PHOTOS,\r\n  GET_INITIAL_PHOTOS_SUCCESS,\r\n  GET_INITIAL_PHOTOS_ERROR,\r\n  GET_PHOTOS,\r\n  GET_PHOTOS_SUCCESS,\r\n  GET_PHOTOS_ERROR,\r\n  GET_PHOTO_DETAILS,\r\n  GET_PHOTO_DETAILS_SUCCESS,\r\n  GET_PHOTO_DETAILS_ERROR,\r\n} from \"./types\";\r\n\r\nconst initialStateSearch = {\r\n  isLoading: false,\r\n  photos: [],\r\n  error: \"\",\r\n  total: 0,\r\n  totalPages: 0,\r\n  photoDetails: {},\r\n};\r\n\r\nexport const upslashReducer = (state = initialStateSearch, action = {}) => {\r\n  const photosCloned = cloneDeep(state.photos);\r\n\r\n  switch (action.type) {\r\n    case GET_INITIAL_PHOTOS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        photos: [],\r\n        error: \"\",\r\n        total: 0,\r\n        totalPages: 0,\r\n      };\r\n    case GET_PHOTOS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: \"\",\r\n      };\r\n    case GET_PHOTO_DETAILS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        photoDetails: {},\r\n      };\r\n    case GET_INITIAL_PHOTOS_SUCCESS:\r\n      const resultsCloned = cloneDeep(action.payload.results);\r\n      return {\r\n        ...state,\r\n        photos: resultsCloned,\r\n        total: action.payload.total,\r\n        totalPages: action.payload.total_pages,\r\n        isLoading: false,\r\n      };\r\n    case GET_PHOTOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photos: [...photosCloned, ...action.payload.results],\r\n        total: action.payload.total,\r\n        totalPages: action.payload.total_pages,\r\n        isLoading: false,\r\n      };\r\n    case GET_PHOTO_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photoDetails: action.payload,\r\n        isLoading: false,\r\n      };\r\n    case GET_INITIAL_PHOTOS_ERROR:\r\n    case GET_PHOTOS_ERROR:\r\n    case GET_PHOTO_DETAILS_ERROR:\r\n      return { ...state, error: action.payload, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { upslashReducer } from \"./reducers\";\r\n\r\nconst reducer = combineReducers({\r\n  upslashState: upslashReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./store/configureStore\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ,\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}